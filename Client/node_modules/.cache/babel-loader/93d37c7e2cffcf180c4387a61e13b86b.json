{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { difference, replaceAt } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver';\nimport { Subscribable } from './subscribable';\nexport var QueriesObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueriesObserver, _Subscribable);\n\n  function QueriesObserver(client, queries) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.queries = [];\n    _this.result = [];\n    _this.observers = [];\n    _this.observersMap = {};\n\n    if (queries) {\n      _this.setQueries(queries);\n    }\n\n    return _this;\n  }\n\n  var _proto = QueriesObserver.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    var _this2 = this;\n\n    if (this.listeners.length === 1) {\n      this.observers.forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this2.onUpdate(observer, result);\n        });\n      });\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.observers.forEach(function (observer) {\n      observer.destroy();\n    });\n  };\n\n  _proto.setQueries = function setQueries(queries, notifyOptions) {\n    this.queries = queries;\n    this.updateObservers(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.result;\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(queries) {\n    var _this3 = this;\n\n    return queries.map(function (options) {\n      var defaultedOptions = _this3.client.defaultQueryObserverOptions(options);\n\n      return _this3.getObserver(defaultedOptions).getOptimisticResult(defaultedOptions);\n    });\n  };\n\n  _proto.getObserver = function getObserver(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    return this.observersMap[defaultedOptions.queryHash] || new QueryObserver(this.client, defaultedOptions);\n  };\n\n  _proto.updateObservers = function updateObservers(notifyOptions) {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      var hasIndexChange = false;\n      var prevObservers = _this4.observers;\n      var prevOberversMap = _this4.observersMap;\n      var newResult = [];\n      var newObservers = [];\n      var newObserversMap = {};\n\n      _this4.queries.forEach(function (options, i) {\n        var defaultedOptions = _this4.client.defaultQueryObserverOptions(options);\n\n        var queryHash = defaultedOptions.queryHash;\n\n        var observer = _this4.getObserver(defaultedOptions);\n\n        if (prevOberversMap[queryHash]) {\n          observer.setOptions(defaultedOptions, notifyOptions);\n        }\n\n        if (observer !== prevObservers[i]) {\n          hasIndexChange = true;\n        }\n\n        newObservers.push(observer);\n        newResult.push(observer.getCurrentResult());\n        newObserversMap[queryHash] = observer;\n      });\n\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return;\n      }\n\n      _this4.observers = newObservers;\n      _this4.observersMap = newObserversMap;\n      _this4.result = newResult;\n\n      if (!_this4.hasListeners()) {\n        return;\n      }\n\n      difference(prevObservers, newObservers).forEach(function (observer) {\n        observer.destroy();\n      });\n      difference(newObservers, prevObservers).forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this4.onUpdate(observer, result);\n        });\n      });\n\n      _this4.notify();\n    });\n  };\n\n  _proto.onUpdate = function onUpdate(observer, result) {\n    var index = this.observers.indexOf(observer);\n\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result);\n      this.notify();\n    }\n  };\n\n  _proto.notify = function notify() {\n    var _this5 = this;\n\n    notifyManager.batch(function () {\n      _this5.listeners.forEach(function (listener) {\n        listener(_this5.result);\n      });\n    });\n  };\n\n  return QueriesObserver;\n}(Subscribable);","map":{"version":3,"sources":["C:/Users/Dear User/Desktop/Resturant/resturantalpha/node_modules/react-query/es/core/queriesObserver.js"],"names":["_inheritsLoose","difference","replaceAt","notifyManager","QueryObserver","Subscribable","QueriesObserver","_Subscribable","client","queries","_this","call","result","observers","observersMap","setQueries","_proto","prototype","onSubscribe","_this2","listeners","length","forEach","observer","subscribe","onUpdate","onUnsubscribe","destroy","notifyOptions","updateObservers","getCurrentResult","getOptimisticResult","_this3","map","options","defaultedOptions","defaultQueryObserverOptions","getObserver","queryHash","_this4","batch","hasIndexChange","prevObservers","prevOberversMap","newResult","newObservers","newObserversMap","i","setOptions","push","hasListeners","notify","index","indexOf","_this5","listener"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,IAAIC,eAAe,GAAG,aAAa,UAAUC,aAAV,EAAyB;AACjEP,EAAAA,cAAc,CAACM,eAAD,EAAkBC,aAAlB,CAAd;;AAEA,WAASD,eAAT,CAAyBE,MAAzB,EAAiCC,OAAjC,EAA0C;AACxC,QAAIC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGH,aAAa,CAACI,IAAd,CAAmB,IAAnB,KAA4B,IAApC;AACAD,IAAAA,KAAK,CAACF,MAAN,GAAeA,MAAf;AACAE,IAAAA,KAAK,CAACD,OAAN,GAAgB,EAAhB;AACAC,IAAAA,KAAK,CAACE,MAAN,GAAe,EAAf;AACAF,IAAAA,KAAK,CAACG,SAAN,GAAkB,EAAlB;AACAH,IAAAA,KAAK,CAACI,YAAN,GAAqB,EAArB;;AAEA,QAAIL,OAAJ,EAAa;AACXC,MAAAA,KAAK,CAACK,UAAN,CAAiBN,OAAjB;AACD;;AAED,WAAOC,KAAP;AACD;;AAED,MAAIM,MAAM,GAAGV,eAAe,CAACW,SAA7B;;AAEAD,EAAAA,MAAM,CAACE,WAAP,GAAqB,SAASA,WAAT,GAAuB;AAC1C,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAI,KAAKC,SAAL,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,WAAKR,SAAL,CAAeS,OAAf,CAAuB,UAAUC,QAAV,EAAoB;AACzCA,QAAAA,QAAQ,CAACC,SAAT,CAAmB,UAAUZ,MAAV,EAAkB;AACnCO,UAAAA,MAAM,CAACM,QAAP,CAAgBF,QAAhB,EAA0BX,MAA1B;AACD,SAFD;AAGD,OAJD;AAKD;AACF,GAVD;;AAYAI,EAAAA,MAAM,CAACU,aAAP,GAAuB,SAASA,aAAT,GAAyB;AAC9C,QAAI,CAAC,KAAKN,SAAL,CAAeC,MAApB,EAA4B;AAC1B,WAAKM,OAAL;AACD;AACF,GAJD;;AAMAX,EAAAA,MAAM,CAACW,OAAP,GAAiB,SAASA,OAAT,GAAmB;AAClC,SAAKP,SAAL,GAAiB,EAAjB;AACA,SAAKP,SAAL,CAAeS,OAAf,CAAuB,UAAUC,QAAV,EAAoB;AACzCA,MAAAA,QAAQ,CAACI,OAAT;AACD,KAFD;AAGD,GALD;;AAOAX,EAAAA,MAAM,CAACD,UAAP,GAAoB,SAASA,UAAT,CAAoBN,OAApB,EAA6BmB,aAA7B,EAA4C;AAC9D,SAAKnB,OAAL,GAAeA,OAAf;AACA,SAAKoB,eAAL,CAAqBD,aAArB;AACD,GAHD;;AAKAZ,EAAAA,MAAM,CAACc,gBAAP,GAA0B,SAASA,gBAAT,GAA4B;AACpD,WAAO,KAAKlB,MAAZ;AACD,GAFD;;AAIAI,EAAAA,MAAM,CAACe,mBAAP,GAA6B,SAASA,mBAAT,CAA6BtB,OAA7B,EAAsC;AACjE,QAAIuB,MAAM,GAAG,IAAb;;AAEA,WAAOvB,OAAO,CAACwB,GAAR,CAAY,UAAUC,OAAV,EAAmB;AACpC,UAAIC,gBAAgB,GAAGH,MAAM,CAACxB,MAAP,CAAc4B,2BAAd,CAA0CF,OAA1C,CAAvB;;AAEA,aAAOF,MAAM,CAACK,WAAP,CAAmBF,gBAAnB,EAAqCJ,mBAArC,CAAyDI,gBAAzD,CAAP;AACD,KAJM,CAAP;AAKD,GARD;;AAUAnB,EAAAA,MAAM,CAACqB,WAAP,GAAqB,SAASA,WAAT,CAAqBH,OAArB,EAA8B;AACjD,QAAIC,gBAAgB,GAAG,KAAK3B,MAAL,CAAY4B,2BAAZ,CAAwCF,OAAxC,CAAvB;AACA,WAAO,KAAKpB,YAAL,CAAkBqB,gBAAgB,CAACG,SAAnC,KAAiD,IAAIlC,aAAJ,CAAkB,KAAKI,MAAvB,EAA+B2B,gBAA/B,CAAxD;AACD,GAHD;;AAKAnB,EAAAA,MAAM,CAACa,eAAP,GAAyB,SAASA,eAAT,CAAyBD,aAAzB,EAAwC;AAC/D,QAAIW,MAAM,GAAG,IAAb;;AAEApC,IAAAA,aAAa,CAACqC,KAAd,CAAoB,YAAY;AAC9B,UAAIC,cAAc,GAAG,KAArB;AACA,UAAIC,aAAa,GAAGH,MAAM,CAAC1B,SAA3B;AACA,UAAI8B,eAAe,GAAGJ,MAAM,CAACzB,YAA7B;AACA,UAAI8B,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AAEAP,MAAAA,MAAM,CAAC9B,OAAP,CAAea,OAAf,CAAuB,UAAUY,OAAV,EAAmBa,CAAnB,EAAsB;AAC3C,YAAIZ,gBAAgB,GAAGI,MAAM,CAAC/B,MAAP,CAAc4B,2BAAd,CAA0CF,OAA1C,CAAvB;;AAEA,YAAII,SAAS,GAAGH,gBAAgB,CAACG,SAAjC;;AAEA,YAAIf,QAAQ,GAAGgB,MAAM,CAACF,WAAP,CAAmBF,gBAAnB,CAAf;;AAEA,YAAIQ,eAAe,CAACL,SAAD,CAAnB,EAAgC;AAC9Bf,UAAAA,QAAQ,CAACyB,UAAT,CAAoBb,gBAApB,EAAsCP,aAAtC;AACD;;AAED,YAAIL,QAAQ,KAAKmB,aAAa,CAACK,CAAD,CAA9B,EAAmC;AACjCN,UAAAA,cAAc,GAAG,IAAjB;AACD;;AAEDI,QAAAA,YAAY,CAACI,IAAb,CAAkB1B,QAAlB;AACAqB,QAAAA,SAAS,CAACK,IAAV,CAAe1B,QAAQ,CAACO,gBAAT,EAAf;AACAgB,QAAAA,eAAe,CAACR,SAAD,CAAf,GAA6Bf,QAA7B;AACD,OAlBD;;AAoBA,UAAImB,aAAa,CAACrB,MAAd,KAAyBwB,YAAY,CAACxB,MAAtC,IAAgD,CAACoB,cAArD,EAAqE;AACnE;AACD;;AAEDF,MAAAA,MAAM,CAAC1B,SAAP,GAAmBgC,YAAnB;AACAN,MAAAA,MAAM,CAACzB,YAAP,GAAsBgC,eAAtB;AACAP,MAAAA,MAAM,CAAC3B,MAAP,GAAgBgC,SAAhB;;AAEA,UAAI,CAACL,MAAM,CAACW,YAAP,EAAL,EAA4B;AAC1B;AACD;;AAEDjD,MAAAA,UAAU,CAACyC,aAAD,EAAgBG,YAAhB,CAAV,CAAwCvB,OAAxC,CAAgD,UAAUC,QAAV,EAAoB;AAClEA,QAAAA,QAAQ,CAACI,OAAT;AACD,OAFD;AAGA1B,MAAAA,UAAU,CAAC4C,YAAD,EAAeH,aAAf,CAAV,CAAwCpB,OAAxC,CAAgD,UAAUC,QAAV,EAAoB;AAClEA,QAAAA,QAAQ,CAACC,SAAT,CAAmB,UAAUZ,MAAV,EAAkB;AACnC2B,UAAAA,MAAM,CAACd,QAAP,CAAgBF,QAAhB,EAA0BX,MAA1B;AACD,SAFD;AAGD,OAJD;;AAMA2B,MAAAA,MAAM,CAACY,MAAP;AACD,KAlDD;AAmDD,GAtDD;;AAwDAnC,EAAAA,MAAM,CAACS,QAAP,GAAkB,SAASA,QAAT,CAAkBF,QAAlB,EAA4BX,MAA5B,EAAoC;AACpD,QAAIwC,KAAK,GAAG,KAAKvC,SAAL,CAAewC,OAAf,CAAuB9B,QAAvB,CAAZ;;AAEA,QAAI6B,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAKxC,MAAL,GAAcV,SAAS,CAAC,KAAKU,MAAN,EAAcwC,KAAd,EAAqBxC,MAArB,CAAvB;AACA,WAAKuC,MAAL;AACD;AACF,GAPD;;AASAnC,EAAAA,MAAM,CAACmC,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIG,MAAM,GAAG,IAAb;;AAEAnD,IAAAA,aAAa,CAACqC,KAAd,CAAoB,YAAY;AAC9Bc,MAAAA,MAAM,CAAClC,SAAP,CAAiBE,OAAjB,CAAyB,UAAUiC,QAAV,EAAoB;AAC3CA,QAAAA,QAAQ,CAACD,MAAM,CAAC1C,MAAR,CAAR;AACD,OAFD;AAGD,KAJD;AAKD,GARD;;AAUA,SAAON,eAAP;AACD,CAnJyC,CAmJxCD,YAnJwC,CAAnC","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { difference, replaceAt } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver';\nimport { Subscribable } from './subscribable';\nexport var QueriesObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueriesObserver, _Subscribable);\n\n  function QueriesObserver(client, queries) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.queries = [];\n    _this.result = [];\n    _this.observers = [];\n    _this.observersMap = {};\n\n    if (queries) {\n      _this.setQueries(queries);\n    }\n\n    return _this;\n  }\n\n  var _proto = QueriesObserver.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    var _this2 = this;\n\n    if (this.listeners.length === 1) {\n      this.observers.forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this2.onUpdate(observer, result);\n        });\n      });\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.observers.forEach(function (observer) {\n      observer.destroy();\n    });\n  };\n\n  _proto.setQueries = function setQueries(queries, notifyOptions) {\n    this.queries = queries;\n    this.updateObservers(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.result;\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(queries) {\n    var _this3 = this;\n\n    return queries.map(function (options) {\n      var defaultedOptions = _this3.client.defaultQueryObserverOptions(options);\n\n      return _this3.getObserver(defaultedOptions).getOptimisticResult(defaultedOptions);\n    });\n  };\n\n  _proto.getObserver = function getObserver(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    return this.observersMap[defaultedOptions.queryHash] || new QueryObserver(this.client, defaultedOptions);\n  };\n\n  _proto.updateObservers = function updateObservers(notifyOptions) {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      var hasIndexChange = false;\n      var prevObservers = _this4.observers;\n      var prevOberversMap = _this4.observersMap;\n      var newResult = [];\n      var newObservers = [];\n      var newObserversMap = {};\n\n      _this4.queries.forEach(function (options, i) {\n        var defaultedOptions = _this4.client.defaultQueryObserverOptions(options);\n\n        var queryHash = defaultedOptions.queryHash;\n\n        var observer = _this4.getObserver(defaultedOptions);\n\n        if (prevOberversMap[queryHash]) {\n          observer.setOptions(defaultedOptions, notifyOptions);\n        }\n\n        if (observer !== prevObservers[i]) {\n          hasIndexChange = true;\n        }\n\n        newObservers.push(observer);\n        newResult.push(observer.getCurrentResult());\n        newObserversMap[queryHash] = observer;\n      });\n\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return;\n      }\n\n      _this4.observers = newObservers;\n      _this4.observersMap = newObserversMap;\n      _this4.result = newResult;\n\n      if (!_this4.hasListeners()) {\n        return;\n      }\n\n      difference(prevObservers, newObservers).forEach(function (observer) {\n        observer.destroy();\n      });\n      difference(newObservers, prevObservers).forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this4.onUpdate(observer, result);\n        });\n      });\n\n      _this4.notify();\n    });\n  };\n\n  _proto.onUpdate = function onUpdate(observer, result) {\n    var index = this.observers.indexOf(observer);\n\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result);\n      this.notify();\n    }\n  };\n\n  _proto.notify = function notify() {\n    var _this5 = this;\n\n    notifyManager.batch(function () {\n      _this5.listeners.forEach(function (listener) {\n        listener(_this5.result);\n      });\n    });\n  };\n\n  return QueriesObserver;\n}(Subscribable);"]},"metadata":{},"sourceType":"module"}